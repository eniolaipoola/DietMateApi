<?phpnamespace app\models;use Yii;use yii\db\ActiveRecord;use yii\web\IdentityInterface;class User extends ActiveRecord implements IdentityInterface{    public static function tableName()    {        return 'dietitian';    }    public function rules()    {        return [            [['email', 'password'], 'required'],            [['password'], 'string', 'max' => 200],            [['email'], 'string', 'max' => 45],            [['email'], 'unique'],            [['email', 'password', 'role_id', 'created_at', 'updated_at', 'admin_id'], 'safe'],        ];    }    //login details    public function login($password)    {        if ($this->validatePassword($password)) {            return Yii::$app->user->login($this->getPrimaryKey());        }        return false;    }    //password details    public function beforeSave($password)    {        if (parent::beforeSave($password)) {            if ($this->isNewRecord) {                $this->password = Yii::$app->security->generatePasswordHash($password);            }            return true;        }        return false;    }    public function setPassword($password)    {        return $this->password = Yii::$app->getSecurity()->generatePasswordHash($password);    }    public function getPassword()    {        return '';    }    public function validatePassword($password)    {        $data = Yii::$app->security->validatePassword($password, $this->password);        if ($data !== false) {            return $data;        } else {            return "Invalid password entered";        }    }    /** Implementation from identity interface     *     *     */    public function setAccessToken($token)    {        return $this->token = Yii::$app->security->generateRandomString($token) . '_' . time();    }    public function getAccessToken()    {        return " ";    }    public static function findIdentityByAccessToken($token, $type = null)    {        return static::findOne(['access-token' => 'token']);    }    public static function findIdentity($id)    {        return static::findOne(['id' => $id]);    }    public function validateAccessToken($token)    {        if (empty($token)) {            return false;        } else {            $timestamp = (int)substr($token, strrpos($token, '_') + 1);            $expire = Yii::$app->params['staff.token'];            return $timestamp + $expire >= time();        }    }    //token details end    //implementing identity interface    public function getId()    {        return $this->getPrimaryKey();    }    public function getAuthKey()    {        return $this->auth_key;    }    public function validateAuthKey($authKey)    {        return $this->getAuthKey() === $authKey;    }    public function extraFields()    {        return [            'users_account',            'users_profile',            'status'        ];    }}